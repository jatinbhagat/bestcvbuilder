const i="/api",n=`${i}/cv-parser`,u="BUILD-2025-08-03-14:45:00-RELATIVE-API";console.log("ðŸ”— API Configuration v1.1.0:",{API_BASE_URL:i,CV_PARSER_ENDPOINT:n});console.log("ðŸš¨ CRITICAL: Verify this shows correct URL - should NOT be bestcvbuilder-gamma!");async function c(e,s=null){try{console.log("Starting ATS analysis for file:",e);const o={file_url:e,analysis_type:"ats_score",include_recommendations:!0};s&&(o.user_id=s,console.log("Including user_id for database saving:",s));const t=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!t.ok)throw new Error(`API request failed: ${t.status}`);const r=await t.json();return console.log("ATS analysis completed:",r),a(r)}catch(o){throw console.error("ATS analysis failed:",o),o}}function a(e){return{score:e.ats_score||0,scoreCategory:m(e.ats_score),strengths:e.strengths||[],improvements:e.improvements||[],detailedAnalysis:e.detailed_analysis||"",keywords:e.keywords||[],missingKeywords:e.missing_keywords||[],formattingIssues:e.formatting_issues||[],suggestions:e.suggestions||[],timestamp:new Date().toISOString()}}function m(e){return e>=90?"excellent":e>=80?"good":e>=70?"fair":e>=60?"poor":"very_poor"}function g(e){return{excellent:"Your resume is highly optimized for ATS systems!",good:"Your resume performs well with ATS systems.",fair:"Your resume has room for improvement with ATS systems.",poor:"Your resume needs significant optimization for ATS systems.",very_poor:"Your resume requires major improvements for ATS compatibility."}[e]||"Score analysis unavailable."}function l(e){const s=[];return e.missingKeywords&&e.missingKeywords.length>0&&s.push({type:"keywords",title:"Add Missing Keywords",description:`Consider adding these industry-specific keywords: ${e.missingKeywords.join(", ")}`,priority:"high"}),e.formattingIssues&&e.formattingIssues.length>0&&s.push({type:"formatting",title:"Fix Formatting Issues",description:e.formattingIssues.join(", "),priority:"medium"}),e.suggestions&&e.suggestions.length>0&&e.suggestions.forEach(o=>{s.push({type:"content",title:o.title||"Content Improvement",description:o.description,priority:o.priority||"medium"})}),s}function p(e){const t=100-e.score;return Math.min(t,40)}const d=async(e,s=null)=>c(e,s);export{i as A,u as B,n as C,d as a,g as b,p as c,l as g};
